#pragma once
#include "Engine\Core\General\EngineCommon.hpp"

//====================================================================================
// Forward Declare
//====================================================================================


//====================================================================================
// Type Defs + Defines
//====================================================================================


//====================================================================================
// ENUMS
//====================================================================================


//====================================================================================
// Structs
//====================================================================================


//====================================================================================
// Classes
//====================================================================================
class Tags
{
public:
	Tags() {}

	Tags(Strings& theTags)
		: m_tags( theTags) {}

	void AddTag(std::string newTag) { m_tags.push_back(newTag); }
	uint GetSize() const { return (uint) m_tags.size(); }
	std::string GetTagAtIndex(uint i) const { return m_tags.at(i); }

	bool operator==(const Tags& toCompare) const;

public:
	Strings			m_tags;
};

//====================================================================================
// Standalone C Functions
//====================================================================================
bool DoTagsShareATag(Tags& a, Tags& b);

//====================================================================================
// Externs
//====================================================================================


//====================================================================================
// Written by Zachary Bracken : [6/18/2018]
//====================================================================================